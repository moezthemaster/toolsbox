param (
    [Parameter(Mandatory = $true)]
    [ValidateScript({
        $path = $_
        if (Test-Path $path) {
            $true
        }
        else {
            throw "The path $path for the script to launch does not exist."
        }
    })]
    [string]$scriptPath,

    [string]$argumentList,
    [switch]$background
)

$username = "{{SVC_USERNAME}}"
$password = "{{SVC_PASSWORD}}"
$environnement = "{{TYPE_ENV}}"

$credentials = New-Object System.Management.Automation.PSCredential -ArgumentList @($username, (ConvertTo-SecureString -String $password -AsPlainText -Force))

if ($environnement -eq "D") {
    $session = New-PSSession -Credential $credentials
}
else {
    $session = New-PSSession -Credential $credentials -Authentication Credssp
}

# Escaper les arguments correctement pour les passer à Start-Process
$escapedArgs = if ($argumentList) { "`"$argumentList`"" } else { "" }

# Création d'un bloc distant qui lance le script via Start-Process détaché
$scriptBlock = {
    param($scriptPath, $args)
    Start-Process -FilePath "powershell.exe" -ArgumentList "-NoProfile -ExecutionPolicy Bypass -File `"$scriptPath`" $args" -WindowStyle Hidden
    Write-Host "Process for '$scriptPath' launched independently via Start-Process"
}

if ($background) {
    $job = Invoke-Command -Session $session -ScriptBlock $scriptBlock -ArgumentList $scriptPath, $argumentList -AsJob
    Write-Host "'$scriptPath' is running in background (detached) with the ID $($job.Id). You can use Receive-Job to fetch results."
}
else {
    Invoke-Command -Session $session -ScriptBlock $scriptBlock -ArgumentList $scriptPath, $argumentList
    Write-Host "script '$scriptPath' successfully invoked (detached)."
}
